# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Variables into github output to use in multiple steps is from https://stackoverflow.com/a/57989070

name: Java CI with Maven

on:
  push:
    branches:
      - '**'
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file ProjectDevOps/pom.xml
    - name: Run Tests
      id: testsRun
      run: |
        mvn -B test --file ProjectDevOps/pom.xml
        total_coverage=$(grep -oh "[0-9]*\%" ProjectDevOps/target/site/jacoco/index.html | tail -1 | cut -d'%' -f1)
        grep -oh "[0-9]*\%" ProjectDevOps/target/site/jacoco/index.html | tail -1
        echo "Jococo found coverage = ${total_coverage}"
        echo "total_coverage=$total_coverage" >> $GITHUB_OUTPUT    
    - name: Test Coverage
      id: coverage
      run: |
        echo "Testing Coverage Test with Jacoco version 0.8.9"
        coverage=${{steps.testsRun.outputs.total_coverage}}
        echo "coverage : ${coverage}"
        echo "coverage 2 : ${{steps.testsRun.outputs.total_coverage}}"
        if [ ${coverage} -lt "75" ]; then
          echo "Coverage test failed, total coverage less than 75%"
          exit 1
        else
          echo "Coverage is great !"
        fi
        if [ ${coverage} -lt "75" ]; then
          color="red"
        elif [ ${coverage} -lt "85" ]; then
          color="orange"
        else
          color="green"
        fi
        echo "badge_color=$color" >> $GITHUB_OUTPUT  

    - name: Create Coverage badge
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: f1612eac8207539733a64b7a531f31f5
        filename: devops_coverage.json
        label: Coverage
        message: ${{steps.testsRun.outputs.total_coverage}}
        color: ${{steps.coverage.outputs.badge_color}}

